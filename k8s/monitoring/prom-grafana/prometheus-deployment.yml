apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: storm-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      name: prometheus
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - mountPath: /etc/prometheus
              name: prom-conf
            - mountPath: /prometheus
              name: monitoring-vol
      volumes:
        - name: prom-conf
          configMap: 
            name: prom-conf
        - name: monitoring-vol
          persistentVolumeClaim:
            claimName: prometheus-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: storm-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana-oss:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources/
              name: datasources-conf
            - mountPath: /var/lib/grafana
              name: monitoring-vol
      volumes:
        - name: datasources-conf
          configMap: 
            name: datasources-conf
        - name: monitoring-vol
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: storm-cluster
  labels:
    app: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      containers:
        - name: node-exporter
          image: prom/node-exporter:latest
          ports:
            - containerPort: 9100
              protocol: TCP
          args:
            - "--path.procfs=/host/proc"
            - "--path.sysfs=/host/sys"
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: rootfs
              mountPath: /rootfs
              readOnly: true
      hostNetwork: true
      hostPID: true
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: rootfs
          hostPath:
            path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storm-exporter
  namespace: storm-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storm-exporter
  template:
    metadata:
      name: storm-exporter
      labels:
        app: storm-exporter
    spec:
      containers:
        - name: storm-exporter
          image: mr4x2/stormexporter:v1.2
          ports:
            - containerPort: 8082
          env:
            - name: STORM_UI_HOST
              value: "nimbus-ui:8081"
            - name: PORT_EXPOSE
              value: "8082"
            - name: REFRESH_RATE
              value: "5"